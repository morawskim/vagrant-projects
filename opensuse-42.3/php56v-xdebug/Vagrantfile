# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "opensuse/openSUSE-42.3-x86_64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #config.vm.network "private_network", ip: "192.168.33.10"
  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # The hostname the machine should have.
  # Defaults to nil. If nil, Vagrant will not manage the hostname.
  # If set to a string, the hostname will be set on boot.
  config.vm.hostname = "rpmbuild-php.vagrant.dev"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  #config.vm.provision "shell", path: "provision.sh", privileged: false
  config.vm.provision "puppet" do |puppet|
    puppet.manifests_path = File.expand_path('../../puppet/manifests/rpm')
    puppet.manifest_file = "php56v-xdebug.pp"
    puppet.module_path = File.expand_path('../../puppet/modules')
    puppet.hiera_config_path = File.expand_path('../../puppet/hiera-vagrant.yaml')
    puppet.working_directory = "/tmp/vagrant-puppet"
    puppet.options = "--verbose --debug"
    puppet.facter = {
      "vagrant" => "1",
    }
  end

  config.vm.synced_folder File.expand_path('../../puppet/hieradata'), "/tmp/vagrant-puppet/hieradata", create: true
  #config.vm.synced_folder "/tmp", "/nfs_share", type: "nfs"
  config.vm.synced_folder ".", "/vagrant", create: true
  # We can't use rpm account, because mount is started before provision.
  # So account rpm not exists and we get error.
  # Instead we use uid. After provision our user will be exist.
  # More info https://github.com/mitchellh/vagrant/issues/936
  config.vm.synced_folder "./rpm", "/srv/rpmbuild", create: true, owner: 1001
end
